{"version":3,"names":["Icon","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Button","text","children","type","icon","style","className","disabled","onClick","e","name","Group","SegmentButton","options","value","onChange","checkedValue","setState","map","item","label"],"sources":["index.tsx"],"sourcesContent":["import Icon, { IconName } from '@docucraft/icons';\nimport { BasicType, ElementProps, Option } from '../interfaces';\nimport { MouseEvent, useEffect, useState } from 'react';\nimport './style';\n\ninterface Props extends ElementProps {\n\tdisabled?: boolean;\n\ttext?: string;\n\ttype?:\n\t\t| 'elevated'\n\t\t| 'filled'\n\t\t| 'filled-tonal'\n\t\t| 'outlined'\n\t\t| 'text'\n\t\t| 'segment'\n\t\t| 'fab'\n\t\t| 'extended-fab';\n\ticon?: IconName;\n\tonClick?: (e: MouseEvent) => void;\n}\n\nconst Button = ({\n\ttext,\n\tchildren,\n\ttype,\n\ticon,\n\tstyle,\n\tclassName,\n\tdisabled,\n\tonClick\n}: Props) => {\n\treturn (\n\t\t<button\n\t\t\tonClick={(e) => {\n\t\t\t\t!disabled && onClick && onClick(e);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\tclassName={`dUI-button${type ? ' dUI-button--' + type : ''}${className ? ' ' + className : ''}${disabled ? ' disabled' : ''}`}\n\t\t>\n\t\t\t{icon ? <Icon name={icon} /> : null}\n\t\t\t<span className=\"dUI-button__label\">{text || children}</span>\n\t\t</button>\n\t);\n};\n\nexport const Group = ({ children, style, className }: ElementProps) => {\n\treturn (\n\t\t<div style={style} className={`dUI-button-group ${className}`}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport const SegmentButton = ({\n\toptions = [],\n\tvalue,\n\tonChange\n}: {\n\toptions?: Option[];\n\tvalue?: BasicType;\n\tonChange?: (v?: BasicType, opt?: Option) => void;\n}) => {\n\tconst [checkedValue, setState] = useState(value);\n\tuseEffect(() => {\n\t\tif (value !== checkedValue) setState(value);\n\t}, [value]);\n\treturn (\n\t\t<Group className=\"segment\">\n\t\t\t{options.map((item) => (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"segment\"\n\t\t\t\t\tclassName={checkedValue === item.value ? 'active' : ''}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tonChange ? onChange(checkedValue, item) : setState(item.value)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{item.label}\n\t\t\t\t</Button>\n\t\t\t))}\n\t\t</Group>\n\t);\n};\n\nButton.Group = Group;\n\nexport default Button;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAoB,kBAAkB;AAEjD,SAAqBC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAO,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAkBjB,MAAMC,MAAM,GAAGA,CAAC;EACfC,IAAI;EACJC,QAAQ;EACRC,IAAI;EACJC,IAAI;EACJC,KAAK;EACLC,SAAS;EACTC,QAAQ;EACRC;AACM,CAAC,KAAK;EACZ,oBACCT,KAAA;IACCS,OAAO,EAAGC,CAAC,IAAK;MACf,CAACF,QAAQ,IAAIC,OAAO,IAAIA,OAAO,CAACC,CAAC,CAAC;IACnC,CAAE;IACFJ,KAAK,EAAEA,KAAM;IACbC,SAAS,EAAE,aAAaH,IAAI,GAAG,eAAe,GAAGA,IAAI,GAAG,EAAE,GAAGG,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,GAAGC,QAAQ,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAL,QAAA,GAE7HE,IAAI,gBAAGP,IAAA,CAACJ,IAAI;MAACiB,IAAI,EAAEN;IAAK,CAAE,CAAC,GAAG,IAAI,eACnCP,IAAA;MAAMS,SAAS,EAAC,mBAAmB;MAAAJ,QAAA,EAAED,IAAI,IAAIC;IAAQ,CAAO,CAAC;EAAA,CACtD,CAAC;AAEX,CAAC;AAED,OAAO,MAAMS,KAAK,GAAGA,CAAC;EAAET,QAAQ;EAAEG,KAAK;EAAEC;AAAwB,CAAC,KAAK;EACtE,oBACCT,IAAA;IAAKQ,KAAK,EAAEA,KAAM;IAACC,SAAS,EAAE,oBAAoBA,SAAS,EAAG;IAAAJ,QAAA,EAC5DA;EAAQ,CACL,CAAC;AAER,CAAC;AAED,OAAO,MAAMU,aAAa,GAAGA,CAAC;EAC7BC,OAAO,GAAG,EAAE;EACZC,KAAK;EACLC;AAKD,CAAC,KAAK;EACL,MAAM,CAACC,YAAY,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAACmB,KAAK,CAAC;EAChDpB,SAAS,CAAC,MAAM;IACf,IAAIoB,KAAK,KAAKE,YAAY,EAAEC,QAAQ,CAACH,KAAK,CAAC;EAC5C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX,oBACCjB,IAAA,CAACc,KAAK;IAACL,SAAS,EAAC,SAAS;IAAAJ,QAAA,EACxBW,OAAO,CAACK,GAAG,CAAEC,IAAI,iBACjBtB,IAAA,CAACG,MAAM;MACNG,IAAI,EAAC,SAAS;MACdG,SAAS,EAAEU,YAAY,KAAKG,IAAI,CAACL,KAAK,GAAG,QAAQ,GAAG,EAAG;MACvDN,OAAO,EAAEA,CAAA,KACRO,QAAQ,GAAGA,QAAQ,CAACC,YAAY,EAAEG,IAAI,CAAC,GAAGF,QAAQ,CAACE,IAAI,CAACL,KAAK,CAC7D;MAAAZ,QAAA,EAEAiB,IAAI,CAACC;IAAK,CACJ,CACR;EAAC,CACI,CAAC;AAEV,CAAC;AAEDpB,MAAM,CAACW,KAAK,GAAGA,KAAK;AAEpB,eAAeX,MAAM","ignoreList":[]}